#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.
# ---------

# TODO turn this into a helper/filter i.e. if file not in main /content/ turn href into ""../""
compile '/components/*/' do
  case item[:extension]
    when 'css'
      # nothing
    when 'js'
      # nothing
    when 'png'
      # nothing
    when 'jpg'
      # nothing
    when 'textile'
      filter :addref
      filter :pretextile
      filter :redcloth, :erb
      layout 'component'
      filter :relativize_paths, :type => :html
    end
end

compile '/faq/*/' do
  case item[:extension]
    when 'css'
      # nothing
    when 'js'
      # nothing
    when 'png'
      # nothing
    when 'jpg'
      # nothing
    when 'textile'
      filter :addref
      filter :pretextile
      filter :redcloth, :erb
      layout 'component'
      filter :relativize_paths, :type => :html
    end
end

compile '*' do
  case item[:extension]
    when 'css'
      # nothing
    when 'js'
      # nothing
    when 'png'
      # nothing
    when 'jpg'
      # nothing
    when 'textile'
      filter :addref
      filter :pretextile
      filter :redcloth, :erb
      layout 'default'
      filter :relativize_paths, :type => :html
    end
end

# By default, nanoc use the page name as folder name and add an index.html page (as in first case). Here, unless the page is named "index.something" we keep the page name.

route '*' do
  case item[:extension]
    when 'css'
      item.identifier.chop + '.' + item[:extension]
    when 'js'
      item.identifier.chop + '.' + item[:extension]
    when 'png'
      item.identifier.chop + '.' + item[:extension]
    when 'jpg'
      item.identifier.chop + '.' + item[:extension]
    when 'textile'
      if item[:content_filename] =~ /\/index.*$/ 
        item.identifier + 'index.html' 
      else 
        item.identifier.chop + '.html'
      end
    end 
end

layout '*', :erb

# TODO Filter images and whatever media file based on extension rather than on directory.